

########## Abilities ####################

#define ARCHAIC_ABILITY_DANCER
    # Canned definition of Feather Dancer ability to be included in an
    # [abilities] clause.
    [resistance]
        id=fdance
        multiply=2
        max_value=50
        # applies to any type if we leave it out, so don't leave it out
        apply_to=blade,pierce,impact
        [filter_base_value]
            greater_than=0
            less_than=50
        [/filter_base_value]
        name= _ "dancer"
        female_name= _ "female^dancer"
        description= _ "Dancer:
This unit's physical resistances are doubled, up to a maximum of 50%, when defending or attacking because the enemy cannot get a direct hit."
        affect_self=yes
        active_on=defense,offense
    [/resistance]
#enddef

#define ARCHAIC_ABILITY_IMMORTAL
    # Canned definition of Immortal ability to be included in an
    # [abilities] clause.
       [regenerate]
        value=99
        id=immortal
        name= _ "immortal"
        description= _ "immortal:
This unit heals 99 HP per turn.  If poisoned, it will remove the poison."
        affect_self=yes
        poison=cured
        [/regenerate]
#enddef

#define ARCHAIC_ABILITY_SELFHEAL
    # Canned definition of Immortal ability to be included in an
    # [abilities] clause.  Crappier version of mainline ABILITY_REGENERATES
       [regenerate]
        value=4
        id=aa_selfheal
        name= _ "selfheal"
        description= _ "selfheal:
This unit heals 4 HP per turn.  If poisoned, it will remove the poison."
        affect_self=yes
        poison=cured
        [/regenerate]
#enddef


### These are for Khthon weirdness #############

#define KHTHON_KILL_CASE USAGE
# to just kill off the unit instead of controlling, -11 so it can't be healed
	    [case]
		value={USAGE}
		[set_variable]
		name=khthon_temp.hitpoints
		value=-11
		[/set_variable]	
	    [/case]
#enddef

#define KHTHON_CASE USAGE
            [case]
                value={USAGE}
                [set_variable]
                name=khthon_temp.advances_to
                value="Khthon-{USAGE}"
                [/set_variable]
                [set_variable]
                name=khthon_temp.race
                value=khthon
                [/set_variable]
                [set_variable]
                name=khthon_temp.experience
                value=0
                [/set_variable]
                [set_variable]
                name=khthon_temp.max_experience
                value=32
                [/set_variable]
                [set_variable]
                name=khthon_temp.side
                value=$khthon_temp2.side
                [/set_variable]
            [/case]
#enddef

#define KHTHON_CASE_MP USAGE
            [case]
                value={USAGE}
                [set_variable]
                name=khthon_temp.advances_to
                value="AMP Khthon-{USAGE}"
                [/set_variable]
                [set_variable]
                name=khthon_temp.race
                value=khthon
                [/set_variable]
                [set_variable]
                name=khthon_temp.experience
                value=0
                [/set_variable]
                [set_variable]
                name=khthon_temp.max_experience
                value=32
                [/set_variable]
                [set_variable]
                name=khthon_temp.side
                value=$khthon_temp2.side
                [/set_variable]
            [/case]
#enddef



#define KHTHON_JUMP TYPE

        [event]
        name=attack_end
        first_time_only=no
                [filter_second]
                type=Khthon-{TYPE}
                [/filter_second]
        [store_unit]
                [filter]
                x,y=$x2,$y2
                [/filter]
                kill=no
                variable=khthon_temp
        [/store_unit]
#       {DEBUG_MSG "$khthon_temp.x"}
        [if]
# if the khthon is near death
            [variable]
                name=khthon_temp.hitpoints
                less_than=15
            [/variable]
            [then]
            {TRANSFORM_UNIT (x,y=$x2,$y2) "Khthon-{TYPE}2"}
#       {DEBUG_MSG "$khthon_temp.type"}
            [/then]
        [/if]
        {CLEAR_VARIABLE khthon_temp}
        [/event]

        [event]
        name=attacker_hits
        first_time_only=no
                [filter]
                type="Khthon-{TYPE}2"
                [/filter]
                [filter_second]
                    [not]
                        race=primeval
                    [/not]
                    [not]
                        race=undead
                    [/not]
                    [not]
                        race=mechanical
                    [/not]
                    [not]
                        race=troll
                    [/not]
                [/filter_second]
        [store_unit]
                [filter]
                x,y=$x1,$y1
                [/filter]
                kill=no
                variable=khthon_temp2
        [/store_unit]
        [store_unit]
                [filter]
                x,y=$x2,$y2
                [/filter]
                kill=yes
                variable=khthon_temp
        [/store_unit]
        [switch]
# Humans, elves, mermen, nagas, and orcs can use the same variants.  Not so Dwarf, saurian, wose...
        variable=khthon_temp.race
# when and if I ever get sprites made, replace KILL_CASE with CASE.  Dwarf is done.
		{KHTHON_CASE dwarf}
		{KHTHON_KILL_CASE bats}		
		{KHTHON_KILL_CASE drake}		
		{KHTHON_KILL_CASE gryphon}		
		{KHTHON_KILL_CASE monster}		
		{KHTHON_KILL_CASE lizard}		
		{KHTHON_KILL_CASE wose}		
		[else]
		    [switch]
		    variable=khthon_temp.usage
			{KHTHON_CASE archer}
			{KHTHON_CASE healer}
			{KHTHON_CASE fighter}
			[else]			
	                [set_variable]
	                name=khthon_temp.advances_to
	                value="Khthon-fighter"
	                [/set_variable]
	                [set_variable]
	                name=khthon_temp.race
	                value=khthon
	                [/set_variable]
	                [set_variable]
	                name=khthon_temp.experience
	                value=0
	                [/set_variable]
	                [set_variable]
	                name=khthon_temp.max_experience
	                value=32
	                [/set_variable]
	                [set_variable]
	                name=khthon_temp.side
	                value=$khthon_temp2.side
	                [/set_variable]
			[/else]
		    [/switch]
		[/else]
	[/switch]
                [unstore_unit]
                variable=khthon_temp
                [/unstore_unit]
                [object]
                silent=yes
                    [filter]
                        x,y=$x2,$y2
                    [/filter]
                    [effect]
                        apply_to=image_mod
                        add="CS(-30,60,0)"
                    [/effect]
                [/object]
                [kill]
                x,y=$x1,$y1
                animate=yes
                [/kill]
        {CLEAR_VARIABLE khthon_temp}
        {CLEAR_VARIABLE khthon_temp2}
        [/event]

#enddef

#define KHTHON_JUMP_MP TYPE
# this is the same as KHTHON_JUMP, but for MP
# there is probably a better way to do this...
        [event]
        name=attack_end
        first_time_only=no
                [filter_second]
                type=AMP Khthon-{TYPE}
                [/filter_second]
        [store_unit]
                [filter]
                x,y=$x2,$y2
                [/filter]
                kill=no
                variable=khthon_temp
        [/store_unit]
        [if]
# if the khthon is near death
            [variable]
                name=khthon_temp.hitpoints
                less_than=15
            [/variable]
            [then]
            {TRANSFORM_UNIT (x,y=$x2,$y2) "AMP Khthon-{TYPE}2"}
            [/then]
        [/if]
        {CLEAR_VARIABLE khthon_temp}
        [/event]

        [event]
        name=attacker_hits
        first_time_only=no
                [filter]
                type="AMP Khthon-{TYPE}2"
                [/filter]
                [filter_second]
                    [not]
                        race=primeval
                    [/not]
                    [not]
                        race=undead
                    [/not]
                    [not]
                        race=mechanical
                    [/not]
                    [not]
                        race=troll
                    [/not]
                [/filter_second]
        [store_unit]
                [filter]
                x,y=$x1,$y1
                [/filter]
                kill=no
                variable=khthon_temp2
        [/store_unit]
        [store_unit]
                [filter]
                x,y=$x2,$y2
                [/filter]
                kill=yes
                variable=khthon_temp
        [/store_unit]
        [switch]
# Humans, elves, mermen, nagas, and orcs can use the same variants.  Not so Dwarf, saurian, wose...
        variable=khthon_temp.race
# when and if I ever get sprites made, replace KILL_CASE with CASE.  Dwarf is done.
		{KHTHON_CASE dwarf}
		{KHTHON_KILL_CASE bats}		
		{KHTHON_KILL_CASE drake}		
		{KHTHON_KILL_CASE gryphon}		
		{KHTHON_KILL_CASE monster}		
		{KHTHON_KILL_CASE lizard}		
		{KHTHON_KILL_CASE wose}		
		[else]
		    [switch]
		    variable=khthon_temp.usage
			{KHTHON_CASE_MP archer}
			{KHTHON_CASE_MP healer}
			{KHTHON_CASE_MP fighter}
			[else]			
	                [set_variable]
	                name=khthon_temp.advances_to
	                value="AMP Khthon-fighter"
	                [/set_variable]
	                [set_variable]
	                name=khthon_temp.race
	                value=khthon
	                [/set_variable]
	                [set_variable]
	                name=khthon_temp.experience
	                value=0
	                [/set_variable]
	                [set_variable]
	                name=khthon_temp.max_experience
	                value=32
	                [/set_variable]
	                [set_variable]
	                name=khthon_temp.side
	                value=$khthon_temp2.side
	                [/set_variable]
			[/else]
		    [/switch]
		[/else]
	[/switch]
                [unstore_unit]
                variable=khthon_temp
                [/unstore_unit]
                [object]
                silent=yes
                    [filter]
                        x,y=$x2,$y2
                    [/filter]
                    [effect]
                        apply_to=image_mod
                        add="CS(-30,60,0)"
                    [/effect]
                [/object]
                [kill]
                x,y=$x1,$y1
                animate=yes
                [/kill]
        {CLEAR_VARIABLE khthon_temp}
        {CLEAR_VARIABLE khthon_temp2}
        [/event]

#enddef

############## End Khthon #####################

############# Phantom Animation utils ##########

#define PHANTOM_STAND_BOB IMAGE_STEM
# this is for the more ghostly units

    [standing_anim]
        start_time=0
        alpha=0.8~0.4:1400,0.4~0.6:600,0.6~0.4:600,0.4~0.8:1400
        [frame]
            duration=250
                image="units/phantom/{IMAGE_STEM}.png"
        [/frame]
        [frame]
            duration=250
                image="units/phantom/{IMAGE_STEM}-lo.png"
        [/frame]
        [frame]
            duration=250
                image="units/phantom/{IMAGE_STEM}.png"
        [/frame]
        [frame]
            duration=250
                image="units/phantom/{IMAGE_STEM}-hi.png"
        [/frame]
        [frame]
            duration=250
                image="units/phantom/{IMAGE_STEM}.png"
        [/frame]
        [frame]
            duration=250
                image="units/phantom/{IMAGE_STEM}-lo.png"
        [/frame]
        [frame]
            duration=250
                image="units/phantom/{IMAGE_STEM}.png"
        [/frame]
        [frame]
            duration=250
                image="units/phantom/{IMAGE_STEM}-hi.png"
        [/frame]
        [frame]
            duration=250
                image="units/phantom/{IMAGE_STEM}.png"
        [/frame]
        [frame]
            duration=250                  
                image="units/phantom/{IMAGE_STEM}-lo.png"
        [/frame]
        [frame]
            duration=250
                image="units/phantom/{IMAGE_STEM}.png"
        [/frame]
        [frame]
            duration=250
                image="units/phantom/{IMAGE_STEM}-hi.png"
        [/frame]
        [frame]
            duration=250
                image="units/phantom/{IMAGE_STEM}.png"
        [/frame]
        [frame]
            duration=250
                image="units/phantom/{IMAGE_STEM}-lo.png"
        [/frame]
        [frame]
            duration=250
                image="units/phantom/{IMAGE_STEM}.png"
        [/frame]
        [frame]
            duration=250
                image="units/phantom/{IMAGE_STEM}-hi.png"
        [/frame]
    [/standing_anim]

#enddef

#define PHANTOM_STAND IMAGE_STEM
# this is for the less ghostly units

    [standing_anim]
        start_time=0
        alpha=1.0~0.4:1400,0.4~0.7:600,0.7~0.5:600,0.5~1.0:1400
        [frame]
            duration=250
                image="units/phantom/{IMAGE_STEM}.png"
        [/frame]
        [frame]
            duration=250
                image="units/phantom/{IMAGE_STEM}.png"
        [/frame]
        [frame]
            duration=250
                image="units/phantom/{IMAGE_STEM}.png"
        [/frame]
        [frame]
            duration=250
                image="units/phantom/{IMAGE_STEM}.png"
        [/frame]
        [frame]
            duration=250
                image="units/phantom/{IMAGE_STEM}.png"
        [/frame]
        [frame]
            duration=250
                image="units/phantom/{IMAGE_STEM}.png"
        [/frame]
        [frame]
            duration=250
                image="units/phantom/{IMAGE_STEM}.png"
        [/frame]
        [frame]
            duration=250
                image="units/phantom/{IMAGE_STEM}.png"
        [/frame]
        [frame]
            duration=250
                image="units/phantom/{IMAGE_STEM}.png"
        [/frame]
        [frame]
            duration=250
                image="units/phantom/{IMAGE_STEM}.png"
        [/frame]
        [frame]
            duration=250
                image="units/phantom/{IMAGE_STEM}.png"
        [/frame]
        [frame]
            duration=250
                image="units/phantom/{IMAGE_STEM}.png"
        [/frame]
        [frame]
            duration=250
                image="units/phantom/{IMAGE_STEM}.png"
        [/frame]
        [frame]
            duration=250
                image="units/phantom/{IMAGE_STEM}.png"
        [/frame]
        [frame]
            duration=250
                image="units/phantom/{IMAGE_STEM}.png"
        [/frame]
        [frame]
            duration=250
                image="units/phantom/{IMAGE_STEM}.png"
        [/frame]
    [/standing_anim]

#enddef



####### End Phantom Animation ##################
